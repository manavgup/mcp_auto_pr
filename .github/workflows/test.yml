name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
        poetry install --with test,dev

    - name: Run unit tests
      run: |
        export PYTHONPATH="$PWD/src:$PYTHONPATH"
        poetry run pytest tests/unit/ -v --tb=short -m "not slow"

    - name: Run integration tests
      run: |
        export PYTHONPATH="$PWD/src:$PYTHONPATH"
        poetry run pytest tests/integration/ -v --tb=short -m "not external"

    - name: Run fast tests with coverage
      run: |
        export PYTHONPATH="$PWD/src:$PYTHONPATH"
        poetry run pytest tests/ -v --tb=short -m "unit and not slow" --cov=src --cov-report=xml --cov-report=html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Install pre-commit
      run: pip install pre-commit

    - name: Install pre-commit hooks
      run: pre-commit install

    - name: Run pre-commit checks
      run: |
        pre-commit run --all-files --show-diff-on-failure

    - name: Test server startup (analyzer)
      run: |
        export PYTHONPATH="$PWD/src:$PYTHONPATH"
        timeout 10s poetry run python -m mcp_local_repo_analyzer.main --transport stdio || [[ $? == 124 ]]

    - name: Test server startup (recommender)
      run: |
        export PYTHONPATH="$PWD/src:$PYTHONPATH"
        timeout 10s poetry run python -m mcp_pr_recommender.main --transport stdio || [[ $? == 124 ]]

    - name: Archive coverage results
      uses: actions/upload-artifact@v3
      if: matrix.python-version == '3.11'
      with:
        name: coverage-results
        path: |
          coverage.xml
          htmlcov/
